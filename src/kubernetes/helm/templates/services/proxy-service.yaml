{{- if .Values.proxyService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: proxy-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.proxyService.replicas }}
  selector:
    matchLabels:
      app: proxy-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: proxy-service
    spec:
      imagePullSecrets:
        - name: {{ default "dockerconfigjson" .Values.imagePullSecretName }}
      containers:
        - name: proxy-service
          image: "{{ .Values.proxyService.image.repository }}:{{ .Values.proxyService.image.tag }}"
          imagePullPolicy: {{ .Values.proxyService.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.proxyService.service.targetPort }}
          env:
            # из values.proxyService.env (MOVIES_* и т.п.)
            {{- with .Values.proxyService.env }}
            {{- range . }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
            # дефолты для конфигурации миграции, если блока .Values.config нет
            - name: GRADUAL_MIGRATION
              value: "{{ default "false" .Values.config.gradualMigration }}"
            - name: MOVIES_MIGRATION_PERCENT
              value: "{{ default "100" .Values.config.moviesMigrationPercent }}"
          resources:
{{ toYaml .Values.proxyService.resources | indent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: proxy-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: {{ .Values.proxyService.service.type }}
  selector:
    app: proxy-service
  ports:
    - name: http
      port: {{ .Values.proxyService.service.port }}
      targetPort: {{ .Values.proxyService.service.targetPort }}
{{- end }}
