name: Docker Build, Push & API Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/docker-build-push.yml'
      - 'docker-compose.ci.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  OWNER: sergeilisovoi22

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout mono-repo (this one)
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (with PAT)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.OWNER }}
          password: ${{ secrets.PAT_GHCR }}

      # === СБОРКА И ПУШ events-service ИЗ ОТДЕЛЬНОГО РЕПО ===
      - name: Build & Push (events-service)
        uses: docker/build-push-action@v5
        with:
          context: https://github.com/SergeiLisovoi22/events-service.git#main
          file: events-service/Dockerfile  # ← Dockerfile в подпапке
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/events-service:latest

  # === СБОРКА И ПУШ proxy-service ИЗ ОТДЕЛЬНОГО РЕПО ===
      - name: Build & Push (proxy-service)
        uses: docker/build-push-action@v5
        with:
          context: https://github.com/SergeiLisovoi22/cinemaabyss-proxy-service.git#main
          file: cinemaabyss-proxy-service/Dockerfile  # ← Dockerfile в подпапке
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/cinemaabyss-proxy-service:latest

      # === ЛОКАЛЬНЫЕ API-ТЕСТЫ В КОНТЕЙНЕРАХ ИЗ ГОТОВЫХ ОБРАЗОВ ===
      - name: Docker compose up (CI stack)
        run: |
          docker compose -f docker-compose.ci.yml pull
          docker compose -f docker-compose.ci.yml up -d
          docker ps

      - name: Wait for services
        run: |
          # Подождём, пока сервисы поднимутся
          for i in {1..30}; do
            curl -fsS http://localhost:8080/actuator/health && break || true
            sleep 3
          done
          # если есть хелсчеки у прокси/ивентов — добавь аналогично

      - name: Run API tests
        run: |
          npm ci
          npm run test:local || npm run test:docker || true

      - name: Docker compose logs (on fail)
        if: failure()
        run: |
          docker compose -f docker-compose.ci.yml logs --no-color > compose-logs.txt || true
          echo "==== tail logs ===="
          tail -n 300 compose-logs.txt || true

      - name: Docker compose down
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down -v
