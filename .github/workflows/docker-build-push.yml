name: Docker Build, Push & API Tests

on:
#  push:
#    branches: [ main ]
#    paths:
#      - 'src/**'
#      - '.github/workflows/docker-build-push.yml'
#      - 'docker-compose.ci.yml'
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  OWNER: sergeilisovoi22

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout mono-repo (this one)
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Log in to GHCR (with PAT)
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GHCR_PAT }}

      # === СБОРКА И ПУШ events-service ИЗ ОТДЕЛЬНОГО РЕПО ===
      - name: Build & Push (events-service)
        uses: docker/build-push-action@v5
        with:
          context: https://github.com/SergeiLisovoi22/events-service.git#main
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/events-service:latest

  # === СБОРКА И ПУШ proxy-service ИЗ ОТДЕЛЬНОГО РЕПО ===
      - name: Build & Push (proxy-service)
        uses: docker/build-push-action@v5
        with:
          context: https://github.com/SergeiLisovoi22/cinemaabyss-proxy-service.git#main:src/microservices/proxy/cinemaabyss-proxy-service
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/cinemaabyss-proxy-service:latest

      - name: Build & Push (monolith)
        uses: docker/build-push-action@v6
        with:
          context: ./src/monolith
          file: ./src/monolith/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/cinemaabyss-monolith:latest
            ghcr.io/${{ github.repository_owner }}/cinemaabyss-monolith:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Build & Push (movies-service)
        uses: docker/build-push-action@v6
        with:
          context: ./src/microservices/movies
          # если Dockerfile не в корне папки movies, укажи точный путь:
          # file: ./src/microservices/movies/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/cinemaabyss-movies-service:latest
            ghcr.io/${{ github.repository_owner }}/cinemaabyss-movies-service:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Compose override with SHA tags
        run: |
          cat > docker-compose.override.yml <<'YAML'
          services:
            proxy-service:
              image: ghcr.io/${{ github.repository_owner }}/cinemaabyss-proxy-service:sha-${{ github.sha }}
              build: null
            events-service:
              image: ghcr.io/${{ github.repository_owner }}/events-service:sha-${{ github.sha }}
              build: null
            monolith:
              image: ghcr.io/${{ github.repository_owner }}/cinemaabyss-monolith:sha-${{ github.sha }}
              build: null
            movies-service:
              image: ghcr.io/${{ github.repository_owner }}/cinemaabyss-movies-service:sha-${{ github.sha }}
              build: null
          YAML


      # === ЛОКАЛЬНЫЕ API-ТЕСТЫ В КОНТЕЙНЕРАХ ИЗ ГОТОВЫХ ОБРАЗОВ ===
      - name: Docker compose up (CI stack)
        run: |
          docker compose -f docker-compose.ci.yml pull
          docker compose -f docker-compose.ci.yml up -d
          docker ps

      - name: Debug networks
        run: |
          docker network ls
          docker network inspect cinemaabyss-network

      - name: DNS smoke (monolith & movies-service)
        run: |
          docker run --rm --network=cinemaabyss-network busybox nslookup monolith
          docker run --rm --network=cinemaabyss-network busybox nslookup movies-service

      - name: Wait for kafka
        run: |
          for i in {1..60}; do
            if nc -z kafka 9092; then
              echo "✅ Kafka is ready"
              exit 0
            fi
            echo "⏳ Kafka not ready, wait..."
            sleep 2
          done
          echo "❌ Kafka did not become ready in time"
          docker compose -f docker-compose.ci.yml logs kafka || true
          exit 1    

      - name: Wait for services (proxy on 8000)
        run: |
          for i in {1..60}; do
            if curl -fsS http://proxy-service:8000/health >/dev/null; then
              echo "proxy-service is healthy"; exit 0
            fi
            sleep 2
          done
          echo "proxy-service not healthy in time" >&2
          docker compose -f docker-compose.ci.yml logs proxy-service || true
          exit 1

      - name: Wait for DNS stabilization
        run: |
          echo "Waiting extra time for DNS propagation..."
          sleep 15    

      - name: Run API tests
        working-directory: tests/postman
        run: |
          docker build -t cinemaabyss-api-tests .
          docker run --rm --network=cinemaabyss-network -v "$(pwd)/reports:/app/reports" cinemaabyss-api-tests

      - name: Docker compose logs (on fail)
        if: failure()
        run: |
          docker compose -f docker-compose.ci.yml logs --no-color > compose-logs.txt || true
          echo "==== tail logs ===="
          tail -n 300 compose-logs.txt || true

      - name: Docker compose down
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down -v
