name: API Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'docker'
        type: choice
        options:
          - local
          - docker
      test_folder:
        description: 'Test folder to run (leave empty for all)'
        required: false
        type: string

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR            # ← ДО compose up
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GHCR_READ_TOKEN }}

      - name: Set up Docker Compose
        run: |
          docker compose --version
      
      - name: Start services with Docker Compose
        run: |
          docker compose -f docker-compose.ci.yml pull
          docker compose -f docker-compose.ci.yml up -d
          echo "Waiting for services to be ready..."
          sleep 120
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/postman/package-lock.json
      
      - name: Install Newman and dependencies
        working-directory: tests/postman
        run: npm install
      
      - name: Run API tests
        working-directory: tests/postman
        run: |

          # Сборка образа для тестов
          docker build -t cinemaabyss-api-tests .

          # Запуск тестов В ТОЙ ЖЕ СЕТИ, что и compose-стек
          docker run --rm \
            --network=cinemaabyss-network \
            -v "$(pwd)/reports:/app/reports" \
            cinemaabyss-api-tests
        
      
      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.ci.yml down