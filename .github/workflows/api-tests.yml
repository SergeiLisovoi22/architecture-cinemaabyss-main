name: API Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'docker'
        type: choice
        options:
          - local
          - docker
      test_folder:
        description: 'Test folder to run (leave empty for all)'
        required: false
        type: string

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          docker compose --version

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre-build monolith & movies images for CI
        run: |
          docker build -t ghcr.io/sergeilisovoi22/cinemaabyss-monolith:latest \
            -f src/monolith/Dockerfile src/monolith
          docker build -t ghcr.io/sergeilisovoi22/cinemaabyss-movies-service:latest \
            -f src/microservices/movies/Dockerfile src/microservices/movies
      

      - name: Start services with Docker Compose
        run: |
          docker compose -f docker-compose.ci.yml up -d
          echo "Waiting for services to be ready..."
          sleep 120
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/postman/package-lock.json
      
      - name: Install Newman and dependencies
        working-directory: tests/postman
        run: npm install

      - name: Ensure compose network exists (debug)
        run: |
          docker network ls
          docker network inspect cinemaabyss-network >/dev/null 2>&1 || docker network create cinemaabyss-network

#      - name: Wait for Docker DNS (monolith & movies-service by container names)
#        run: |
#          for i in {1..60}; do
#            if docker run --rm --network=cinemaabyss-network busybox nslookup cinemaabyss-monolith >/dev/null 2>&1 \
#               && docker run --rm --network=cinemaabyss-network busybox nslookup cinemaabyss-movies-service >/dev/null 2>&1; then
#              echo "✅ DNS is ready"; exit 0
#            fi
#            echo "⏳ DNS not ready, retry..."
#            sleep 2
#          done
#          echo "❌ DNS did not become ready in time"
#          docker network inspect cinemaabyss-network || true
#          exit 1

      - name: Run API tests
        working-directory: tests/postman
        run: |

          # Сборка образа для тестов
          docker build -t cinemaabyss-api-tests .

          # Запуск тестов В ТОЙ ЖЕ СЕТИ, что и compose-стек
          docker run --rm \
            --network=cinemaabyss-network \
            -v "$(pwd)/reports:/app/reports" \
            cinemaabyss-api-tests
        
      
      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.ci.yml down